{
  "address": "0xD292bdec1952801b5923CbCBE87C2174474d036d",
  "abi": [
    {
      "inputs": [],
      "name": "nftMarkeetplace__notApprovedNFT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketPlace__nftPriceZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "nftMarketplace__AlreadyListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketplace__NoProceeds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketplace__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "nftMarketplace__insufficientFundtoBuy",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "nftMarketplace__isNotListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketplace__notOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "Buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemBrought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ItemCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct nftMarketplace.ListItem",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "getProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listingNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDrawProceeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x17d5230295f45fe059ce4e3626cdfd7a399d8ca779fc4bd9ced5fabef23738a1",
  "receipt": {
    "to": null,
    "from": "0xCfeFf4ea629aA00C55983a764eE17135cEa22869",
    "contractAddress": "0xD292bdec1952801b5923CbCBE87C2174474d036d",
    "transactionIndex": 46,
    "gasUsed": "1294712",
    "logsBloom": "0x
    "blockHash": "0xe28e5302b1824a06fdad48e2e3bd840c22a6e5d0c3c02548bdd8b9eefecdd61c",
    "transactionHash": "0x17d5230295f45fe059ce4e3626cdfd7a399d8ca779fc4bd9ced5fabef23738a1",
    "logs": [],
    "blockNumber": 8669910,
    "cumulativeGasUsed": "9126182",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cd7aa645dacccae73329cf02521a7e78",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"nftMarkeetplace__notApprovedNFT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketPlace__nftPriceZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"nftMarketplace__AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketplace__NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketplace__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"nftMarketplace__insufficientFundtoBuy\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"nftMarketplace__isNotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketplace__notOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBrought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct nftMarketplace.ListItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listingNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nftMarketplace.sol\":\"nftMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/nftMarketplace.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\n\\r\\nerror nftMarketPlace__nftPriceZero();\\r\\nerror nftMarkeetplace__notApprovedNFT();\\r\\nerror nftMarketplace__AlreadyListed(address nftAddress, uint256 tokenId);\\r\\nerror nftMarketplace__notOwner();\\r\\nerror nftMarketplace__isNotListed(address nftAddress, uint256 tokenId);\\r\\nerror nftMarketplace__insufficientFundtoBuy(address nftAddress, uint256 token, uint256 price);\\r\\nerror nftMarketplace__NoProceeds();\\r\\nerror nftMarketplace__TransactionFailed();\\r\\n\\r\\ncontract nftMarketplace{\\r\\n\\r\\n    /////////////////////\\r\\n    ////Main Functions///\\r\\n    /////////////////////\\r\\n\\r\\n    //1. Listing of the nft \\u2705\\r\\n    //2. Buying the nft \\u2705\\r\\n    //3. Cancelling nft \\u2705\\r\\n    //4. Updating nft price \\u2705\\r\\n    //5. Withdrawing the amount \\u2705\\r\\n\\r\\n    //contractAddress => tokenID => listing item\\r\\n\\r\\n    struct ListItem{\\r\\n\\r\\n        uint256 price;\\r\\n        address seller;\\r\\n    }\\r\\n\\r\\n    event ItemListed(\\r\\n        address indexed seller,\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 price\\r\\n    );\\r\\n\\r\\n    event ItemBrought(\\r\\n        address indexed Buyer,\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 price\\r\\n    );\\r\\n\\r\\n    event ItemCancelled(\\r\\n        address indexed nftAddress,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    modifier AlreadyListed(address nftAddress, uint256 tokenId){\\r\\n        ListItem memory listingitem = s_nftlisting[nftAddress][tokenId];\\r\\n        if(listingitem.price > 0){\\r\\n            revert nftMarketplace__AlreadyListed(nftAddress, tokenId);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner(address nftAddress, uint256 tokenId, address seller){\\r\\n        IERC721 nft = IERC721(nftAddress);\\r\\n        address owner = nft.ownerOf(tokenId);\\r\\n        if(owner != seller){\\r\\n            revert nftMarketplace__notOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isNotListed(address nftAddress, uint256 tokenId){\\r\\n        ListItem memory listingitem = s_nftlisting[nftAddress][tokenId];\\r\\n        if(listingitem.price <= 0){\\r\\n            revert nftMarketplace__isNotListed(nftAddress,tokenId);\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    mapping(address => mapping(uint256 => ListItem)) private s_nftlisting;\\r\\n    mapping(address => uint256) private s_proceeds;\\r\\n\\r\\n    function listingNft(\\r\\n        \\r\\n        address nftAddress, \\r\\n        uint256 tokenId, \\r\\n        uint256 price\\r\\n        ) external \\r\\n        AlreadyListed(nftAddress,tokenId)\\r\\n        onlyOwner(nftAddress,tokenId,msg.sender){\\r\\n        \\r\\n        if(price <= 0){\\r\\n            revert nftMarketPlace__nftPriceZero();\\r\\n        }\\r\\n\\r\\n        IERC721 ierc = IERC721(nftAddress);\\r\\n        if(ierc.getApproved(tokenId) != address(this)){\\r\\n            revert nftMarkeetplace__notApprovedNFT();\\r\\n        }\\r\\n\\r\\n        s_nftlisting[nftAddress][tokenId] = ListItem({\\r\\n            price : price,\\r\\n            seller: msg.sender\\r\\n\\r\\n        });\\r\\n\\r\\n        emit ItemListed(msg.sender,nftAddress,tokenId,price);\\r\\n\\r\\n    }\\r\\n\\r\\n    function buyItem(\\r\\n        address nftAddress, \\r\\n        uint256 tokenId\\r\\n        ) external payable \\r\\n        isNotListed(nftAddress,tokenId){\\r\\n\\r\\n        ListItem memory listingitem = s_nftlisting[nftAddress][tokenId];\\r\\n        if(msg.value < listingitem.price){\\r\\n            revert nftMarketplace__insufficientFundtoBuy(nftAddress,tokenId,listingitem.price);\\r\\n        }\\r\\n        s_proceeds[listingitem.seller] += msg.value;\\r\\n        delete(s_nftlisting[nftAddress][tokenId]);\\r\\n\\r\\n        IERC721 ierc = IERC721(nftAddress);\\r\\n        ierc.safeTransferFrom(listingitem.seller, msg.sender, tokenId);\\r\\n\\r\\n        emit ItemBrought(msg.sender, nftAddress, tokenId, listingitem.price);\\r\\n    \\r\\n        \\r\\n    }\\r\\n\\r\\n    function cancelListing(\\r\\n        address nftAddress, \\r\\n        uint256 tokenId\\r\\n        )external onlyOwner(nftAddress,tokenId,msg.sender) AlreadyListed(nftAddress,tokenId){\\r\\n\\r\\n        delete(s_nftlisting[nftAddress][tokenId]);\\r\\n        emit ItemCancelled(nftAddress,tokenId);\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n    function updateListing(\\r\\n        address nftAddress, \\r\\n        uint256 tokenId, \\r\\n        uint256 newPrice\\r\\n        )external AlreadyListed(nftAddress,tokenId) onlyOwner(nftAddress,tokenId,msg.sender) {\\r\\n        \\r\\n        ListItem memory listingitem = s_nftlisting[nftAddress][tokenId];\\r\\n        listingitem.price = newPrice;\\r\\n\\r\\n        emit ItemListed(msg.sender,nftAddress,tokenId,newPrice);\\r\\n\\r\\n    }\\r\\n\\r\\n    function withDrawProceeds()external{\\r\\n        uint256 proceed = s_proceeds[msg.sender];\\r\\n        if(proceed <= 0){\\r\\n            revert nftMarketplace__NoProceeds();\\r\\n        }\\r\\n        s_proceeds[msg.sender] = 0;\\r\\n        (bool sucess,) = payable(msg.sender).call{value:proceed}(\\\"\\\");\\r\\n        if(!sucess){\\r\\n            revert nftMarketplace__TransactionFailed();\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    /////////////////////\\r\\n    //////Getters///////\\r\\n    ////////////////////\\r\\n\\r\\n    function getListing(address nftAddress, uint256 tokenId)external view returns(ListItem memory){\\r\\n        return s_nftlisting[nftAddress][tokenId];\\r\\n    }\\r\\n\\r\\n    function getProceeds(address seller)external view returns(uint256){\\r\\n        return s_proceeds[seller];\\r\\n    }\\r\\n    \\r\\n}\",\"keccak256\":\"0x11f762b7e9a75561f693fde99a871e74d845ae3945bb8eb85bb09b86b307e915\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2747,
        "contract": "contracts/nftMarketplace.sol:nftMarketplace",
        "label": "s_nftlisting",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListItem)2626_storage))"
      },
      {
        "astId": 2751,
        "contract": "contracts/nftMarketplace.sol:nftMarketplace",
        "label": "s_proceeds",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(ListItem)2626_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct nftMarketplace.ListItem))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(ListItem)2626_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(ListItem)2626_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct nftMarketplace.ListItem)",
        "numberOfBytes": "32",
        "value": "t_struct(ListItem)2626_storage"
      },
      "t_struct(ListItem)2626_storage": {
        "encoding": "inplace",
        "label": "struct nftMarketplace.ListItem",
        "members": [
          {
            "astId": 2623,
            "contract": "contracts/nftMarketplace.sol:nftMarketplace",
            "label": "price",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2625,
            "contract": "contracts/nftMarketplace.sol:nftMarketplace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}